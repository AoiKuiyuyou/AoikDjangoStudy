# ----- Main function -----
__main__.main

    # ----- Call `execute_from_command_line` -----
    django.core.management.execute_from_command_line

        # ----- Create `ManagementUtility` -----
        django.core.management.ManagementUtility.__init__

        # ----- Call `execute` -----
        django.core.management.ManagementUtility.execute

            # ----- Create `CommandParser` -----
            django.core.management.base.CommandParser.__init__

            # ----- Call `parse_known_args` -----
            django.core.management.base.CommandParser -> argparse.ArgumentParser.parse_known_args

            # ----- Call `handle_default_options` -----
            django.core.management.base.handle_default_options

            # ----- Call `setup` -----
            django.setup

                # ----- Call `configure_logging` -----
                django.utils.log.configure_logging

                # ----- Call `set_script_prefix` -----
                django.urls.base.set_script_prefix

                # ----- Call `populate` -----
                django.apps.registry.Apps.populate

            # ----- Call `autocomplete` -----
            django.core.management.ManagementUtility.autocomplete

            # ----- Call `fetch_command` -----
            django.core.management.ManagementUtility.fetch_command

                # ----- Call `get_commands` -----
                django.core.management.get_commands

                # ----- Call `load_command_class` -----
                django.core.management.load_command_class

            # ----- Call `run_from_argv` -----
            django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.base.BaseCommand.run_from_argv

                # ----- Call `create_parser` -----
                django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.base.BaseCommand.create_parser

                    # ----- Create `CommandParser` -----
                    django.core.management.base.CommandParser.__init__

                # ----- Call `parse_args` -----
                django.core.management.base.CommandParser.parse_args

                    # ----- Call `parse_known_args` -----
                    django.core.management.base.CommandParser -> argparse.ArgumentParser.parse_known_args

                    # ----- Call `handle_default_options` -----
                    django.core.management.base.handle_default_options

                # ----- Call `execute` -----
                django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.commands.runserver.Command.execute

                    # ----- Call super method -----
                    django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.base.BaseCommand.execute

                        # ----- Call `handle` -----
                        django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.commands.runserver.Command.handle

                            # ----- Call `run` -----
                            django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.commands.runserver.Command.run

                                # ----- Call `inner_run` -----
                                django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.commands.runserver.Command.inner_run

                                    # ----- Call `check` -----
                                    django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.base.BaseCommand.check

                                    # ----- Call `check_migrations` -----
                                    django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.base.BaseCommand.check_migrations

                                    # ----- Call `get_handler` -----
                                    django.contrib.staticfiles.management.commands.runserver.Command.get_handler

                                        # ----- Call super method -----
                                        django.contrib.staticfiles.management.commands.runserver.Command -> django.core.management.commands.runserver.Command.get_handler

                                            # ----- Call `get_internal_wsgi_application` -----
                                            django.core.servers.basehttp.get_internal_wsgi_application

                                                # ----- Call `get_wsgi_application` -----
                                                django.core.wsgi.get_wsgi_application

                                                    # ----- Call `setup` -----
                                                    django.setup

                                                    # ----- Create `WSGIHandler` -----
                                                    django.core.handlers.wsgi.WSGIHandler.__init__

                                                        # ----- Call super method -----
                                                        django.core.handlers.wsgi.WSGIHandler -> django.core.handlers.base.BaseHandler.__init__

                                                        # ----- Call `load_middleware` -----
                                                        django.core.handlers.wsgi.WSGIHandler -> django.core.handlers.base.BaseHandler.load_middleware

                    # ----- Call `run` -----
                    django.core.servers.basehttp.run

                        # ----- Create `WSGIServer` -----
                        django.core.servers.basehttp.WSGIServer.__init__

                            # ----- Call super method -----
                            django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.__init__

                                # ----- Call super method -----
                                django.core.servers.basehttp.WSGIServer -> socketserver.BaseServer.__init__

                                    # ----- Create socket -----
                                    socket.socket.__init__

                                    # ----- Call `server_bind` -----
                                    django.core.servers.basehttp.WSGIServer.server_bind

                                        # ----- Call super method -----
                                        django.core.servers.basehttp.WSGIServer -> wsgiref.simple_server.WSGIServer.server_bind

                                            # ----- Call super method -----
                                            django.core.servers.basehttp.WSGIServer -> http.server.HTTPServer.server_bind

                                                # ----- Call super method -----
                                                django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.server_bind

                                                    # ----- Bind socket to server address -----
                                                    socket.socket -> _socket.socket.bind

                                            # ----- Call `setup_environ` -----
                                            django.core.servers.basehttp.WSGIServer -> wsgiref.simple_server.WSGIServer.setup_environ

                                        # ----- Call `setup_environ` -----
                                        django.core.servers.basehttp.WSGIServer -> wsgiref.simple_server.WSGIServer.setup_environ

                                # ----- Call `server_activate` -----
                                django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.server_activate

                                    # ----- Start listening socket -----
                                    socket.socket -> _socket.socket.listen

                        # ----- Call `set_app` -----
                        django.core.servers.basehttp.WSGIServer -> wsgiref.simple_server.WSGIServer.set_app

                        # ----- Call `serve_forever` -----
                        django.core.servers.basehttp.WSGIServer -> socketserver.BaseServer.serve_forever

                            # ----- Create selector -----
                            selectors.SelectSelector.__init__

                            # ----- Register listening socket to selector -----
                            selectors.SelectSelector.register

                            # ----- Loop to poll listening socket's read event -----
                            ```
                            # Pseudo code
                            while True:
                                ready = selector.select(timeout)
                                if ready:
                                    return self._handle_request_noblock()
                            ```

                                # ----- Poll read event on the listening socket -----
                                #
                                # Notice only the listening socket is registered with the selector
                                # so when there is a read event it must be from the listening
                                # socket.
                                #
                                selectors.SelectSelector.select

                                # ----- Call `_handle_request_noblock` -----
                                # When read event occurs, it means a client is connecting.
                                django.core.servers.basehttp.WSGIServer -> socketserver.BaseServer._handle_request_noblock

                                    # ----- Call `get_request` -----
                                    django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.get_request

                                        # ----- Accept the connecting socket -----
                                        socket.socket.accept

                                            # ----- Wrap the accepted socket's file descriptor in a socket object -----
                                            socket.socket.__init__

                                    # ----- Call `verify_request` -----
                                    django.core.servers.basehttp.WSGIServer -> socketserver.BaseServer.verify_request

                                    # ----- Call `process_request` -----
                                    # Create thread to run `process_request_thread`.
                                    #
                                    django.core.servers.basehttp.WSGIServer -> socketserver.ThreadingMixIn.process_request

# ----- Thread 1 -----

    # ----- Call `process_request_thread` -----
    django.core.servers.basehttp.WSGIServer -> socketserver.ThreadingMixIn.process_request_thread

        # ----- Call `finish_request` -----
        django.core.servers.basehttp.WSGIServer -> socketserver.BaseServer.finish_request

            # ----- Create `self.RequestHandlerClass` instance -----
            django.core.servers.basehttp.WSGIRequestHandler -> socketserver.BaseRequestHandler.__init__

                # ----- Call `setup` -----
                django.core.servers.basehttp.WSGIRequestHandler -> socketserver.StreamRequestHandler.setup

                    # ----- Create input file from the socket -----
                    socket.socket.makefile

                        # ----- Wrap the socket in `SocketIO` -----
                        socket.SocketIO.__init__

                    # ----- Create output file from the socket -----
                    socket.socket.makefile

                        # ----- Wrap the socket in `SocketIO` -----
                        socket.SocketIO.__init__

                # ----- Call `handle` -----
                django.core.servers.basehttp.WSGIRequestHandler.handle

                    # ----- Read request line -----
                    socket.SocketIO.readinto

                    # ----- Call `parse_request` to parse headers -----
                    django.core.servers.basehttp.WSGIRequestHandler -> http.server.BaseHTTPRequestHandler.parse_request

                    # ----- Get the stderr file to be passed to WSGI server handler -----
                    django.core.servers.basehttp.WSGIRequestHandler -> wsgiref.simple_server.WSGIRequestHandler.get_stderr

                    # ----- Get the environ dict to be passed to WSGI server handler -----
                    django.core.servers.basehttp.WSGIRequestHandler.get_environ

                        # ----- Call super method -----
                        django.core.servers.basehttp.WSGIRequestHandler -> wsgiref.simple_server.WSGIRequestHandler.get_environ

                    # ----- Create WSGI server handler -----
                    django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler.__init__

                    # ----- Get WSGI application  -----
                    django.core.servers.basehttp.WSGIServer -> wsgiref.simple_server.WSGIServer.get_app

                    # ----- Call `run` -----
                    django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.run

                        # ----- Call `setup_environ` -----
                        django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.setup_environ

                        # ----- Create `WSGIHandler` -----
                        django.core.handlers.wsgi.WSGIHandler.__call__

                            # ----- Call `set_script_prefix` -----
                            django.urls.base.set_script_prefix

                            # ----- Call `request_class` -----
                            django.core.handlers.wsgi.WSGIHandler.request_class

                                # ----- Create `WSGIRequest` -----
                                django.core.handlers.wsgi.WSGIRequest.__init__

                            # ----- Call `get_response` -----
                            django.core.handlers.wsgi.WSGIHandler -> django.core.handlers.base.BaseHandler.get_response

                                # ----- Call `set_urlconf` -----
                                django.urls.base.set_urlconf

                                # ----- Call `process_request` -----
                                django.middleware.security.SecurityMiddleware.process_request

                                # ----- Call `process_request` -----
                                django.contrib.sessions.middleware.SessionMiddleware.process_request

                                # ----- Call `process_request` -----
                                django.middleware.common.CommonMiddleware.process_request

                                # ----- Call `process_request` -----
                                django.contrib.auth.middleware.AuthenticationMiddleware.process_request

                                # ----- Call `process_request` -----
                                django.contrib.messages.middleware.MessageMiddleware.process_request

                                # ----- Call `_get_response` -----
                                django.core.handlers.wsgi.WSGIHandler -> django.core.handlers.base.BaseHandler._get_response

                                    # ----- Call `get_resolver` -----
                                    django.urls.resolvers.get_resolver

                                    # ----- Call `resolve` -----
                                    django.urls.resolvers.RegexURLResolver.resolve

                                    # ----- Call `process_view` -----
                                    django.middleware.csrf.CsrfViewMiddleware.process_view

                                    # ----- Call `make_view_atomic` -----
                                    django.core.handlers.wsgi.WSGIHandler -> django.core.handlers.base.BaseHandler.make_view_atomic

                                    # ----- Call `CustomRequestHandler` -----
                                    aoikdjangostudy.views.CustomRequestHandler

                                        # ----- Read request body -----
                                        django.core.handlers.wsgi.WSGIRequest -> django.http.request.HttpRequest.read

                                        # ----- Create `HttpResponse` -----
                                        django.http.response.HttpResponse.__init__

                                        # ----- Return `HttpResponse` -----

                                # ----- Call `process_response` -----
                                django.middleware.clickjacking.XFrameOptionsMiddleware.process_response

                                # ----- Call `process_response` -----
                                django.contrib.messages.middleware.MessageMiddleware.process_response

                                # ----- Call `process_response` -----
                                django.middleware.csrf.CsrfViewMiddleware.process_response

                                # ----- Call `process_response` -----
                                django.middleware.common.CommonMiddleware.process_response

                                # ----- Call `process_response` -----
                                django.contrib.sessions.middleware.SessionMiddleware.process_response

                                # ----- Call `process_response` -----
                                django.middleware.security.SecurityMiddleware.process_response

                            # ----- Call `start_response` -----
                            django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.start_response

                        # ----- Call `finish_response` -----
                        django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.finish_response

                            # ----- Call `write` -----
                            django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.write

                                # ----- Call `send_headers` -----
                                django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.send_headers

                                    # ----- Call `cleanup_headers` -----
                                    django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.cleanup_headers

                                    # ----- Call `send_preamble` -----
                                    django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.send_preamble

                                        # ----- Write status line -----
                                        django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._write

                                        # ----- Write `Date` header -----
                                        django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._write

                                        # ----- Write `Server` header -----
                                        django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._write

                                    # ----- Write `Content-Length` header -----
                                    django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._write

                                # ----- Write response body -----
                                django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._write

                                # ----- Call `_flush` -----
                                django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.SimpleHandler._flush

                                    # ----- Write to output `SocketIO` -----
                                    socket.SocketIO.write

                            # ----- Call `finish_content` -----
                            django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.finish_content

                            # ----- Call `close` -----
                            django.core.servers.basehttp.ServerHandler -> wsgiref.simple_server.ServerHandler.close

                                # ----- Call super method -----
                                django.core.servers.basehttp.ServerHandler -> wsgiref.handlers.BaseHandler.close

                # ----- Call `finish` -----
                django.core.servers.basehttp.WSGIRequestHandler -> socketserver.StreamRequestHandler.finish

                    # ----- Flush stdout `SocketIO` -----
                    socket.SocketIO -> _io._IOBase.flush

                    # ----- Close stdout `SocketIO` -----
                    socket.SocketIO.close

                    # ----- Close stderr `SocketIO` -----
                    socket.SocketIO.close

        # ----- Call `shutdown_request` -----
        django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.shutdown_request

            # ----- Close write channel -----
            socket.socket -> _socket.socket.shutdown

            # ----- Call `close_request` -----
            django.core.servers.basehttp.WSGIServer -> socketserver.TCPServer.close_request

                # ----- Close socket -----
                socket.socket.close
